triggers {
  name: "tel_DanceFloor"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "53dd8ede663532e179085da7"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Stop Music"
    }
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "53dd04c7663532e20fb530fa"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "53dcfd8d663532e20fb530d8"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "tel_Bar"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "53dd7f09663532e179085d94"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Stop Music"
    }
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "53dd0571663532e20fb530fe"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
    }
    ops {
      functionName: "Play Music"
      args {
        call_value {
          functionName: "Get Map Item (Music)"
          args {
            string_value: "Berlin_Club"
          }
          args {
            string_value: "Berlin-Club01"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "musicOn"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "53dd0584663532e20fb530ff"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "JukeBox"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "53dd0e58663532e20fb53110"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "musicOn"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Play Music"
      args {
        call_value {
          functionName: "Get Map Item (Music)"
          args {
            string_value: "Seattle_Bar"
          }
          args {
            string_value: "Seattle-Bar07"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "musicOn"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "53dd0e65663532e20fb53111"
  }
  elseActions {
    ops {
      functionName: "Stop Music"
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "musicOn"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  is_oneshot: true
}
triggers {
  name: "actorInit"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Animation State Of Actor To Animation Modifier"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "AnimationState"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "53de3a6b663532e179085dd8"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (AnimationModifiers)"
          args {
            string_value: "examine"
          }
          args {
            string_value: "examine"
          }
        }
      }
    }
    ops {
      functionName: "Set Animation State Of Actor To Animation Modifier"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "AnimationState"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "53de39f2663532e179085dd7"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (AnimationModifiers)"
          args {
            string_value: "talking"
          }
          args {
            string_value: "talking"
          }
        }
      }
    }
    ops {
      functionName: "Set Animation State Of Actor To Animation Modifier"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "AnimationState"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "53de4494663532e179085ddd"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (AnimationModifiers)"
          args {
            string_value: "leaning"
          }
          args {
            string_value: "leaning"
          }
        }
      }
    }
    ops {
      functionName: "Set Animation State Of Actor To Animation Modifier"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "AnimationState"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "53de4405663532e179085ddc"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (AnimationModifiers)"
          args {
            string_value: "talking"
          }
          args {
            string_value: "talking"
          }
        }
      }
    }
    ops {
      functionName: "Set Animation State Of Actor To Animation Modifier"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "AnimationState"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "53de555d663532e179085dde"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (AnimationModifiers)"
          args {
            string_value: "bouncer"
          }
          args {
            string_value: "bouncer"
          }
        }
      }
    }
    ops {
      functionName: "Set Animation State Of Actor To Animation Modifier"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "AnimationState"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "53de394c663532e179085dd5"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (AnimationModifiers)"
          args {
            string_value: "poised"
          }
          args {
            string_value: "poised"
          }
        }
      }
    }
    ops {
      functionName: "Set Animation State Of Actor To Animation Modifier"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "AnimationState"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "53de721e663532e179085e33"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (AnimationModifiers)"
          args {
            string_value: "sexy"
          }
          args {
            string_value: "sexy"
          }
        }
      }
    }
    ops {
      functionName: "Set Animation State Of Actor To Animation Modifier"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "AnimationState"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "53de796f663532e179085e37"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (AnimationModifiers)"
          args {
            string_value: "poised"
          }
          args {
            string_value: "poised"
          }
        }
      }
    }
    ops {
      functionName: "Set Animation State Of Actor To Animation Modifier"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "AnimationState"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "53de7808663532e179085e36"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (AnimationModifiers)"
          args {
            string_value: "mentalPatient_rocking"
          }
          args {
            string_value: "rocking"
          }
        }
      }
    }
    ops {
      functionName: "Set Animation State Of Actor To Animation Modifier"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "AnimationState"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "53de7e7b663532e179085e38"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (AnimationModifiers)"
          args {
            string_value: "talking"
          }
          args {
            string_value: "talking"
          }
        }
      }
    }
    ops {
      functionName: "Set Animation State Of Actor To Animation Modifier"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "AnimationState"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "53debc4a663532a261cd66ec"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (AnimationModifiers)"
          args {
            string_value: "sexy"
          }
          args {
            string_value: "sexy"
          }
        }
      }
    }
    ops {
      functionName: "Set Animation State Of Actor To Animation Modifier"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "AnimationState"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "53decbf2663532a261cd66f6"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (AnimationModifiers)"
          args {
            string_value: "sexy"
          }
          args {
            string_value: "sexy"
          }
        }
      }
    }
    ops {
      functionName: "Set Animation State Of Actor To Animation Modifier"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "AnimationState"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "53debc48663532a261cd66eb"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (AnimationModifiers)"
          args {
            string_value: "mentalPatient_headbanging"
          }
          args {
            string_value: "headBanging"
          }
        }
      }
    }
    ops {
      functionName: "Set Animation State Of Actor To Animation Modifier"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "AnimationState"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "53dec9b4663532a261cd66ee"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (AnimationModifiers)"
          args {
            string_value: "sexy"
          }
          args {
            string_value: "sexy"
          }
        }
      }
    }
    ops {
      functionName: "Set Animation State Of Actor To Animation Modifier"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "AnimationState"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "53decbda663532a261cd66f4"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (AnimationModifiers)"
          args {
            string_value: "sexy"
          }
          args {
            string_value: "sexy"
          }
        }
      }
    }
    ops {
      functionName: "Set Animation State Of Actor To Animation Modifier"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "AnimationState"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "53decad8663532a261cd66f0"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (AnimationModifiers)"
          args {
            string_value: "sexy"
          }
          args {
            string_value: "sexy"
          }
        }
      }
    }
    ops {
      functionName: "Set Animation State Of Actor To Animation Modifier"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "AnimationState"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "53decbd8663532a261cd66f3"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (AnimationModifiers)"
          args {
            string_value: "mentalPatient_headbanging"
          }
          args {
            string_value: "headBanging"
          }
        }
      }
    }
    ops {
      functionName: "Set Animation State Of Actor To Animation Modifier"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "AnimationState"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "53decbeb663532a261cd66f5"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (AnimationModifiers)"
          args {
            string_value: "sexy"
          }
          args {
            string_value: "sexy"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "53dd216d663532e179085d2e"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "triggerInit"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Retain Other Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "53dcfd8d663532e20fb530d8"
          }
        }
      }
    }
    ops {
      functionName: "Set Retain Other Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "53dd0584663532e20fb530ff"
          }
        }
      }
    }
    ops {
      functionName: "Set Retain Other Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "53dd0e65663532e20fb53111"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "53de96df663532e179085e39"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "charInit"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Add Nuyen"
      args {
        int_value: 200
      }
    }
    ops {
      functionName: "Set Actor Display Name"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "53de6d34663532e179085e32"
              }
            }
          }
          args {
          }
        }
      }
      args {
        string_value: "Man"
      }
    }
    ops {
      functionName: "No Effect"
    }
  }
  isActive: true
  idRef {
    id: "53deb5dc663532e179085e51"
  }
  elseActions {
  }
  is_oneshot: true
}
regions {
  name: "BarRegion"
  position {
    x: -21
    y: -8
    width: 25
    height: 21
  }
  enabledAtStart: true
  is_camera_region: true
  idRef {
    id: "53dcfcad663532e20fb530d7"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.25
    y: -1
    z: -0.8
  }
  directional_light_color {
    r: 0.827451
    g: 0.827451
    b: 0.6
    a: 1
  }
  ambient_light_color {
    r: 0.36862746
    g: 0.17647059
    b: 0.039215688
    a: 1
  }
  ambience_template: "bar-busy"
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: true
}
regions {
  name: "BarTeleportRegion"
  position {
    x: -6
    y: -6
    width: -2
    height: 2
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "53dd04c7663532e20fb530fa"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
}
regions {
  name: "DanceFloorTeleportRegion"
  position {
    x: -24
    y: -71
    width: -2
    height: 2
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "53dd0571663532e20fb530fe"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
}
regions {
  name: "DanceFloorRegion"
  position {
    x: -3
    y: -73
    width: -24
    height: 23
  }
  enabledAtStart: true
  is_camera_region: true
  idRef {
    id: "53dd05db663532e20fb53102"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.4
    y: -1
    z: -0.15
  }
  directional_light_color {
    r: 0.24705882
    g: 0.43921569
    b: 0.41176471
    a: 1
  }
  ambient_light_color {
    r: 0.21960784
    g: 0.094117649
    b: 0.20784314
    a: 1
  }
  ambience_template: "bar-busy"
  combat_music: ""
  default_music: "Silence"
  loop_combat_music: true
  loop_default_music: false
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -1
    y: 0
    z: 9
  }
  orientation: ORIENTATION_S
  idRef {
    id: "53dad4c3663532fc3d204044"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/ElfMale"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        hp: 0
        ap: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Player"
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "Player_SamuraiStarter"
    }
    team_id: "Shadowrunners"
    char_name: "Kurt Hummel"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "shadowrun-glee-kurt"
    }
    portrait_code_override: " s6h7c14b0t0"
    karma: 6
    hiring_cost_override: 3000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -9
    y: 0
    z: 0
  }
  orientation: ORIENTATION_N
  displayName: "TableDwarf"
  idRef {
    id: "53de394c663532e179085dd5"
  }
  lod: 0
  character_instance {
    character_sheet_id: "Lvl1_Dwarf_Shaman"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeAggressive
    }
    equipment {
      prefab_name: "Pi 1 Fichetti Security 500"
    }
    equipment {
      prefab_name: "Bound Air Spirit 1"
    }
    equipment {
      prefab_name: "Bound Air Spirit 1"
    }
    equipment {
      prefab_name: "HealthPack"
    }
    equipment {
      prefab_name: "Spell Haste 1"
    }
    equipment {
      prefab_name: "Spell Slow 1"
    }
    team_id: "Civilians"
    char_name: "TableDwarf"
    pc_spawn_number: -1
    hiring_type: HiringType_Hireable
    karma: 1
    hiring_cost_override: 900
    hiring_set_randomizer: "dwarf_shaman"
    hiring_tag: "Shaman"
    id: "Lvl1_Dwarf_Shaman"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -13
    y: 0
    z: 0
  }
  orientation: ORIENTATION_S
  displayName: "PoolOrk"
  idRef {
    id: "53de39f2663532e179085dd7"
  }
  lod: 0
  character_instance {
    prefab_name: "Berlin:HavenCivilians/OrkMaleHavenCivilian_2"
    character_sheet_id: "Lvl2_Merc_Ork_UrbanShaman"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "ShamanUrban"
    }
    equipment {
      prefab_name: "HealthPack"
    }
    equipment {
      prefab_name: "Bound Air Spirit 2"
    }
    equipment {
      prefab_name: "Bound Earth Spirit 2"
    }
    equipment {
      prefab_name: "Bound Fire Spirit 1"
    }
    equipment {
      prefab_name: "Spell Haste 1"
    }
    equipment {
      prefab_name: "Spell Slow 1"
    }
    team_id: "Civilians"
    char_name: "Kiluminati Alabrad"
    pc_spawn_number: -1
    hiring_type: HiringType_Hireable
    cyberware_jack: "Datajack"
    portrait {
      filename: "Backer_OrkMale_BradleyMiller_KiluminatiAlabrad"
    }
    description_bio: "The Network wanted a shaman that comes from the streets with a full command of spirits."
    karma: 2
    hiring_cost_override: 1500
    hiring_tag: "Urban Shaman"
    is_backer: true
    id: "Lvl2_Merc_Ork_UrbanShaman"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -3
    y: 0
    z: -4
  }
  orientation: ORIENTATION_W
  idRef {
    id: "53de3a6b663532e179085dd8"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Extras/HumanMaleWorkingclassShirtSpiky"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        hp: 0
        ap: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Non-Combatant"
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "Outfit_Corporate Salaryman"
    }
    team_id: "Civilians"
    char_name: "PoolHuman"
    pc_spawn_number: -1
    portrait_code_override: "s6h4b1"
    karma: 6
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -15
    y: 0
    z: 4
  }
  orientation: ORIENTATION_S
  idRef {
    id: "53de3b34663532e179085dd9"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Extras/ElfFemaleFashionista"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        hp: 0
        ap: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Non-Combatant"
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Bartender"
    pc_spawn_number: -1
    portrait {
      filename: "pc_elffemale_10a_punkdecker"
    }
    karma: 6
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -13
    y: 0
    z: 6
  }
  orientation: ORIENTATION_E
  idRef {
    id: "53de3c90663532e179085dda"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Extras/HumanFemaleJacketGoggles"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        hp: 0
        ap: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Non-Combatant"
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "New Actor"
    pc_spawn_number: -1
    portrait {
      filename: "pc_humanfemale_05_goth"
    }
    karma: 6
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -13
    y: 0
    z: 9
  }
  orientation: ORIENTATION_W
  idRef {
    id: "53de4405663532e179085ddc"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Standard/TrollFemaleDetective"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        hp: 0
        ap: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Non-Combatant"
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "OrkBar"
    pc_spawn_number: -1
    karma: 6
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -13
    y: 0
    z: 8
  }
  orientation: ORIENTATION_S
  displayName: "ElfBusinessMan"
  idRef {
    id: "53de4494663532e179085ddd"
  }
  lod: 0
  character_instance {
    prefab_name: "Berlin:Business/HumanMaleBusinessMan"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        hp: 0
        ap: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Non-Combatant"
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "ElfBusinessMan"
    pc_spawn_number: -1
    karma: 6
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -23
    y: 0
    z: -71
  }
  orientation: ORIENTATION_E
  displayName: "Bouncer"
  idRef {
    id: "53de555d663532e179085dde"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    conversationPoint {
      conversationID: "53deeb0c6635326869e994a1"
      turnToFace: true
    }
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Security/TrollMalesSecurityNVG"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        hp: 0
        ap: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Non-Combatant"
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Bouncer"
    pc_spawn_number: -1
    portrait {
      filename: "pc_trollmale_02a_cigar"
    }
    karma: 6
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -15
    y: 0
    z: 0
  }
  orientation: ORIENTATION_N
  displayName: "BusinessWoman"
  idRef {
    id: "53de6919663532e179085e2f"
  }
  lod: 0
  character_instance {
    prefab_name: "Berlin:Gangers/HumanFemaleBerlinGanger"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        hp: 0
        ap: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "New Actor"
    pc_spawn_number: -1
    karma: 6
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -12
    y: 0
    z: -4
  }
  orientation: ORIENTATION_W
  idRef {
    id: "53de6d34663532e179085e32"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/HumanMale"
    character_sheet_id: "Lvl6_Human_Decker"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "CyberdeckKraftwerk1"
    }
    equipment {
      prefab_name: "Berlin_Player_DeckerJacket"
    }
    team_id: "Civilians"
    char_name: "Blaine Anderson"
    pc_spawn_number: -1
    hiring_type: HiringType_Hireable
    cyberware_eyes: "Vision Magnification Eyes"
    cyberware_jack: "Datajack"
    cyberware_body: "Wired Reflexes"
    portrait {
      filename: "shadowrun-glee-blaine"
    }
    portrait_code_override: "s5h1c11b0t0"
    karma: 6
    hiring_cost_override: 3000
    is_prop_character: false
    id: "blaine"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -9
    y: 0
    z: -68
  }
  orientation: ORIENTATION_N
  displayName: "DanceHumanWoman"
  idRef {
    id: "53de721e663532e179085e33"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Punk/HumanFemaleLonghairPunk"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        hp: 0
        ap: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Non-Combatant"
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "New Actor"
    pc_spawn_number: -1
    karma: 6
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -19
    y: 0
    z: -64
  }
  orientation: ORIENTATION_W
  idRef {
    id: "53de7808663532e179085e36"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Wealthy/HumanMaleAutumn"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        hp: 0
        ap: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Non-Combatant"
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "DancingGuy"
    pc_spawn_number: -1
    karma: 6
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -9
    y: 0
    z: -59
  }
  orientation: ORIENTATION_E
  displayName: "ElfBusinesWoman"
  idRef {
    id: "53de796f663532e179085e37"
  }
  lod: 0
  character_instance {
    prefab_name: "Berlin:Business/ElfFemaleBusinessWoman"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        hp: 0
        ap: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Non-Combatant"
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Callie"
    pc_spawn_number: -1
    karma: 6
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -9
    y: 0
    z: -58
  }
  orientation: ORIENTATION_W
  displayName: "BusinessMan"
  idRef {
    id: "53de7e7b663532e179085e38"
  }
  lod: 0
  character_instance {
    prefab_name: "Berlin:Business/HumanMaleBusinessManCoat"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        hp: 0
        ap: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Non-Combatant"
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "New Actor"
    pc_spawn_number: -1
    karma: 6
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -18
    y: 0
    z: -69
  }
  orientation: ORIENTATION_S
  displayName: "BusinessManDanceFloor"
  idRef {
    id: "53debc48663532a261cd66eb"
  }
  lod: 0
  character_instance {
    prefab_name: "Berlin:Business/HumanMaleBusinessMan"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        hp: 0
        ap: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Non-Combatant"
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "New Actor"
    pc_spawn_number: -1
    karma: 6
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -10
    y: 0
    z: -68
  }
  orientation: ORIENTATION_S
  displayName: "DancingDwarf"
  idRef {
    id: "53debc4a663532a261cd66ec"
  }
  lod: 0
  character_instance {
    prefab_name: "Berlin:Gangers/DwarfMaleBerlinGangerMohawk"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        hp: 0
        ap: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "New Actor"
    pc_spawn_number: -1
    karma: 6
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -13
    y: 0
    z: -62
  }
  orientation: ORIENTATION_S
  displayName: "DancingOrk"
  idRef {
    id: "53dec9b4663532a261cd66ee"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Standard/OrkFemaleShaman"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        hp: 0
        ap: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Non-Combatant"
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "DancingOrkShaman"
    pc_spawn_number: -1
    karma: 6
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -15
    y: 0
    z: -67
  }
  orientation: ORIENTATION_E
  displayName: "Dancing Fool"
  idRef {
    id: "53decad8663532a261cd66f0"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Punk/HumanMalePonyPunk"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        hp: 0
        ap: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "New Actor"
    pc_spawn_number: -1
    karma: 6
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -10
    y: 0
    z: -64
  }
  orientation: ORIENTATION_W
  GeneralTags: "dancer"
  displayName: "HumanisDancing"
  idRef {
    id: "53decbd8663532a261cd66f3"
  }
  lod: 0
  character_instance {
    prefab_name: "Berlin:Humanis/HumanMaleHumanisFlattopBlonde"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        hp: 0
        ap: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "New Actor"
    GeneralTags: "dancer"
    pc_spawn_number: -1
    karma: 6
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -21
    y: 0
    z: -68
  }
  orientation: ORIENTATION_N
  GeneralTags: "dancer"
  displayName: "DancingBoyElfGanger"
  idRef {
    id: "53decbda663532a261cd66f4"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Gangers/ElfMaleGangerDreads"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        hp: 0
        ap: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "New Actor"
    GeneralTags: "dancer"
    pc_spawn_number: -1
    karma: 6
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -20
    y: 0
    z: -61
  }
  orientation: ORIENTATION_S
  GeneralTags: "dancer"
  displayName: "TrollDancing"
  idRef {
    id: "53decbeb663532a261cd66f5"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Standard/TrollMaleDecker"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        hp: 0
        ap: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "New Actor"
    GeneralTags: "dancer"
    pc_spawn_number: -1
    karma: 6
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -24
    y: 0
    z: -65
  }
  orientation: ORIENTATION_W
  GeneralTags: "dancer"
  displayName: "DancingGirlPunk"
  idRef {
    id: "53decbf2663532a261cd66f6"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Punk/HumanFemaleSkirtPunk"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        hp: 0
        ap: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "New Actor"
    GeneralTags: "dancer"
    pc_spawn_number: -1
    karma: 6
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "musicOn"
    typeName: "bool"
  }
}
worldMapLocation {
  filename: ""
  location {
    x: 0
    y: 0
  }
}
mapName: "FirstMeeting"
parentStory: ""
scene_title: "First Meeting"
scene_subtitle: ""
scene_synopsis: "That night, Kurt falls asleep to the faint glow of Blaine\'s cyberware. Blaine is cuddly tonight, even more cuddly than usual. He only gets likes when he\'s tired and overwhelmed. It\'s a distinctive thing, a Blaine thing. It\'s always the little things that surprise Kurt when it comes to being in love.\n\nThen again, the big things still have the capacity to surprise, too.\n\nHe never expected to meet Blaine when he did. The world had scraped him raw, hardened him up, and the thought that there could be something tender in his life, something gentle, was foreign to him.\n\nThey met on a routine mission, as by-the-book as they come.\n\nIt\'s always the easy ones that take you by surprise."
scene_image: ""
scene_continue_button_skip: false
scene_restore_runner_health: false
directional_light_dir {
  x: -0.5
  y: -1
  z: -0.75
}
directional_light_color {
  r: 0.50196081
  g: 0.50196081
  b: 0.50196081
}
ambient_light_color {
  r: 0.50196081
  g: 0.50196081
  b: 0.50196081
}
allow_drawn_weapons: false
team_affiliations {
  team_name: "Shadowrunners"
  affiliation: 0
  affiliation: 1
  affiliation: 1
  affiliation: 0
}
team_affiliations {
  team_name: "Gangers"
  affiliation: 1
  affiliation: 0
  affiliation: 1
  affiliation: 0
}
team_affiliations {
  team_name: "LoneStar"
  affiliation: 1
  affiliation: 1
  affiliation: 0
  affiliation: 0
}
team_affiliations {
  team_name: "Civilians"
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
}
scene_dimensions {
  dimension_name: "Default"
}
character_roster {
}
show_hiring_screen_on_scene_load: false
scene_hiring_prerequisites {
  prereq_description: ""
  prereq_conditions {
  }
}
hiring_slot_count: 0
hiring_minimum_karma: 0
hiring_maximum_karma: 0
roster_overrides {
}
use_hiring_cost_warning: false
hiring_average_cost: 0
override_hiring_average_cost: false
show_equip_screen_on_scene_load: false
can_move_outside_camera_regions: true
can_start_before_triggers: true
